"""
This script will generate a 2d lattice of points connected by ellipsoids with given dimensions to be 
rendered by povray
"""
def ellipsoid_rep(i,j,axis,colour):
    if axis=="x":
        s="""
sphere{
    0,1 scale <1,0.25,0.25>
    translate <"""+str(2*i+1)+","+str(2*j)+""",0>"""
    else:
        s="""
sphere{
    0,1 scale <0.25,1,0.25>
    translate <"""+str(2*i)+","+str(2*j+1)+""",0>"""
    if colour==0:
        s+="""     
    texture{pigment{color Red}
    finish{phong 1}}}\n"""
    else:
        s+="""     
    texture{pigment{color Blue}
    finish{phong 1}}}\n"""
    return s
   
def start(Lx,Ly,filename):
    f=open(filename,'w')
    f.write("""
//2D Square Lattice Simulation with ellipsoids
//Version 1.0
//Nathan Shettell

#include "shapes.inc"
#include "textures.inc"
#include "colors.inc"

global_settings {
    assumed_gamma 1}
    
camera {
    location <"""+str(-0.75*Lx)+","+str(-0.75*Ly)+","+str(min(Lx,Ly))+""">
    look_at <"""+str(Lx/2.)+","+str(Ly/2.)+""",0>}
    
light_source {
    <"""+str(0.75*Lx)+","+str(0.75*Ly)+","+str(max(-Lx,-Ly))+""">
    color White
    parallel
    point_at <"""+str(Lx/2.)+","+str(Ly/2.)+""",0>}
\n""")
    from random import randint
    ellipsoids_x=[[randint(0,1) for x in [0]*(Lx-1)] for y in [0]*Ly]
    ellipsoids_y=[[randint(0,1) for y in [0]*(Ly-1)] for x in [0]*Lx]
    """
    Ellipsoids_x and ellipods_y are lists of lists where the inner lists contain randomly generated 0&1's
    The 0 and 1 represent the color associated to the ellipsoid.
    The ellipsoids generated by ellipsoids_x are parallel to the x-axis and similarly, the ellipsoids in
    ellipsoids_y are parallel to the y-axis.
    The position of ellipsoids in the lists determine the position of them on the lattice,
    for example the third element in the fourth list in ellipsoids_x represent the ellipsoid between the locations:
    (3,4) and (4,4)."""
    
    #Adds the ellipsoids to the image
    j=0
    for e_x in ellipsoids_x:
        i=0
        for e in e_x:
            f.write(ellipsoid_rep(i,j,"x",e))
            i+=1
        j+=1
        
    i=0
    for e_y in ellipsoids_y:
        j=0
        for e in e_y:
            f.write(ellipsoid_rep(i,j,"y",e))
            j+=1
        i+=1
    f.close()